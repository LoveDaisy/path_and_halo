function test_compute_weight()
test_cases = {@suite1, @suite2};
num = length(test_cases);

fprintf('Start testing for compute_weight...\n');
for i = 1:num
    fprintf('Testing suite %d/%d...\n', i, num);
    test_cases{i}();
    fprintf('suite %d/%d passed!\n', i, num);
end
end

% ================================================================================
function suite1()
crystal = opt.make_prism_crystal(1);
trace.fid = [3; 5];
sun_ll = [180, 10];
ray_in_ll = [sun_ll(1) + 180, -sun_ll(2)];
ray_out_ll = [-5, 13.8];
ray_out_xyz = geo.ll2xyz(ray_out_ll);

config_cache_file = 'test_config_1_35_180+10_3.mat';
if exist(config_cache_file, 'file')
    load(config_cache_file);
else
    config = opt.init_config(crystal, trace, sun_ll, 3);
    save(config_cache_file, 'config');
end

fdf = @(rot) opt.crystal_system(rot, ray_in_ll, crystal, trace);

% Find seed rotation
cand_rot = opt.find_cand_rot(config, ray_out_ll, 'quat');
init_rot = ode.find_solution(fdf, cand_rot(1, :), [ray_out_xyz, 1], 'eps', 1e-8);

% Find contour
[rot_contour, contour_status] = ode.find_contour(fdf, init_rot, 'h', 0.05);
assert(contour_status.closed && contour_status.completed);

rot_llr = geo.quat2llr(rot_contour);
w0 = 0.164465509191055;
cmp0 = [0, 0.155444145935710, 2.42406840554768e-05, 38157.5615836966, 0.186902489694091, 0.899153417947328;
    0.0499630071083414, 0.158168296451584, 2.42406840554768e-05, 32349.7796555605, 0.199068006954559, 1.01321537338526;
    0.0865022611958837, 0.150477966257233, 2.42406840554768e-05, 27757.0321390753, 0.204931061226792, 1.09130771268848;
    0.133346031814515, 0.146914699313373, 2.42406840554768e-05, 23721.2027354667, 0.218201681667221, 1.17091556957782;
    0.180191057605186, 0.148628682489775, 2.42406840554768e-05, 21370.4927446791, 0.233757001790148, 1.22737872947807;
    0.227504952391562, 0.152409172499599, 2.42406840554768e-05, 20076.2546080419, 0.247541723751241, 1.26512992444894;
    0.287543039266772, 0.167271011919495, 2.42406840554768e-05, 19450.6607778496, 0.274816201651688, 1.29091937943809;
    0.336515433240914, 0.185082247906634, 2.42406840554768e-05, 19614.5847588251, 0.300314098642725, 1.29617921992627;
    0.399089338890963, 0.169141889552310, 2.42406840554768e-05, 20687.2756631177, 0.262759899192698, 1.28364200041198;
    0.450569399697557, 0.166418180574778, 2.42406840554768e-05, 22544.7041466902, 0.242601777235041, 1.25521285965242;
    0.503772557241885, 0.171800293421920, 2.42406840554768e-05, 25820.5075810143, 0.227747340257921, 1.20520504482190;
    0.549896433005475, 0.176990696868120, 2.42406840554768e-05, 30216.4714843422, 0.211935674482873, 1.14013887336550;
    0.599876573402651, 0.180688244531961, 2.42406840554768e-05, 35599.1632879309, 0.200665039388792, 1.04345451395900;
    0.641362320771635, 0.168223275611142, 2.42406840554768e-05, 36871.4643866442, 0.198426490951351, 0.948530227569916;
    0.678712987669182, 0.130218184072035, 2.42406840554768e-05, 34626.8434072297, 0.178859035828526, 0.867367160632986;
    0.725538800265276, 0.0976401939914441, 2.42406840554768e-05, 31183.2086052182, 0.163689160676428, 0.789119981854371;
    0.771571456805141, 0.0820477403522671, 2.42406840554768e-05, 28914.1801639523, 0.158584011656990, 0.738161637433103;
    0.817881238217181, 0.0755107258854831, 2.42406840554768e-05, 27616.2398535305, 0.159896952943529, 0.705438308706367;
    0.864886220191682, 0.0746400216015550, 2.42406840554768e-05, 26987.5412439482, 0.166544522393432, 0.685067260163468;
    0.924852836231045, 0.0803029284678570, 2.42406840554768e-05, 26926.9655244218, 0.182966085509735, 0.672401233151475;
    0.973981442954373, 0.0848801444755295, 2.42406840554768e-05, 27409.1391394306, 0.190418200513190, 0.670899374162774;
    1.03694956058800, 0.0807547727654208, 2.42406840554768e-05, 28790.0228071417, 0.170086426730349, 0.680317530402139;
    1.08885694765466, 0.0839580145025155, 2.42406840554768e-05, 30747.9923263101, 0.161036020804239, 0.699483531095238;
    1.14239282217076, 0.0953155484987315, 2.42406840554768e-05, 33779.1163694715, 0.158469327982933, 0.734556793033610;
    1.18360000729540, 0.112093811886614, 2.42406840554768e-05, 36700.7234947215, 0.162081865531734, 0.777369889133099;
    1.22513822625197, 0.136747437515597, 2.42406840554768e-05, 38832.3194839106, 0.172863316530245, 0.840384730153342];

axis_pdf = generate_axis_pdf([0, 0, 0]);
[w, cmp] = opt.compute_contour_weight(rot_llr, axis_pdf, config);

assert(abs(w - w0) < 1e-8);
assert(norm(cmp(1:5:end, :) - cmp0) < 1e-8);
end

% ================================================================================
function suite2()
crystal = opt.make_prism_crystal(1);
trace.fid = [3; 5];
axis_pdf = opt.make_axis_pdf([0, 0.2]);
sun_ll = [180, 15];
ray_in_ll = [sun_ll(1) + 180, -sun_ll(2)];

% fdf = @(rot) opt.crystal_system(rot, ray_in_ll, crystal, trace);

config_cache_file = 'test_config_1_35_180+15_3.mat';
if exist(config_cache_file, 'file')
    load(config_cache_file);
else
    config = opt.init_config(crystal, trace, sun_ll, 3);
    save(config_cache_file, 'config');
end

qot_contour = [0.277944405424369, 0.199839250360648, -0.0142933873217121, 0.939471596715417;
            0.284490039252107, 0.222544609762294, -0.0180883303705186, 0.932315465378587;
            0.294126195517284, 0.243446053122710, -0.0229588756761010, 0.923957082772235;
            0.307608945959245, 0.261137627945582, -0.0291021976623103, 0.914514591560377;
            0.316050797213166, 0.268002498465003, -0.0326404203761253, 0.909516991486507;
            0.325668202109063, 0.272915169758877, -0.0363821737080313, 0.904507529064503;
            0.336286390764541, 0.275335913776435, -0.0401245358318378, 0.899717522360931;
            0.347469373280606, 0.274896585439784, -0.0435681519412431, 0.895432135203665;
            0.358613770539261, 0.271630402986468, -0.0464142198239445, 0.891884971344858;
            0.378901181064000, 0.258467356878247, -0.0497478371753434, 0.887216813165000;
            0.395433476081045, 0.239919415483945, -0.0501313639362626, 0.885188051696732;
            0.408371943036287, 0.218650256523909, -0.0482791017815221, 0.884925731483548;
            0.425279866495401, 0.172513731791241, -0.0402313988226125, 0.887557030566012;
            0.432001050559219, 0.124641649947595, -0.0289406896228791, 0.892749678435096;
            0.428924181078066, 0.0769338943677691, -0.0165262530489215, 0.899906720829105;
            0.423331577596794, 0.0537609674077012, -0.0104880431456709, 0.904317496895500;
            0.414545637656910, 0.0316436721399997, -0.00493218709042133, 0.909464824108801;
            0.401955485325712, 0.0115272526681117, -0.000237383231078088, 0.915586617617170;
            0.394001679201211, 0.00275892050173842, 0.00162989869008453, 0.919104130553316;
            0.384848377878526, -0.00466632637027931, 0.00307316882467909, 0.922962896070808;
            0.374533251121076, -0.0102273404212029, 0.00401345132412059, 0.927148390479439;
            0.363298953953469, -0.0133382311119646, 0.00440151786165554, 0.931566738744568;
            0.351655804809282, -0.0135562631647475, 0.00426021823306701, 0.936021513369096;
            0.340260474655172, -0.0108357178240380, 0.00370189039375310, 0.940261502488401;
            0.320105571259312, 0.00172323739636650, 0.00195089606714405, 0.947378302557664;
            0.304309479677726, 0.0202614460617157, 5.68804452588824e-05, 0.952357711994462;
            0.292395099452988, 0.0419227265887486, -0.00167107189763309, 0.955376783671125;
            0.277586783468230, 0.0894223865954245, -0.00470808360929780, 0.956518190543835;
            0.275555421522773, 0.187407187371701, -0.0126442086836735, 0.942755472262181;
            0.277944405424369, 0.199839250360648, -0.0142933873217121, 0.939471596715417];

w0 = 17.4559217722283;
cmp0 = [0, 0, 0, 3.56040183613432, 0.311139998403179, 1.11222464831128;
    0.0336885608892133, 0, 0, 3.97313115055648, 0.291783523538120, 1.08467032479825;
    0.0673750394352270, 0, 0, 4.67025923604533, 0.277284650814176, 1.04364169000334;
    0.0973119143262450, 0, 0, 5.51954604394353, 0.270176848460302, 0.994096870060859;
    0.124987799578047, 0, 0, 5.95055081283356, 0.264946471327967, 0.939741207345649;
    0.157188138512084, 0, 0, 5.41209349685456, 0.244558106896419, 0.884424160210201;
    0.187477955507077, 0, 0, 4.79025968060753, 0.236677979275327, 0.846551390368798;
    0.220817229294125, 0, 0, 4.35209081886380, 0.238998758866815, 0.821483593693594;
    0.258247461105479, 0, 0, 4.05647104280988, 0.248261346111106, 0.803637203666665;
    0.291935792474722, 0, 0, 3.96812988320447, 0.260669665225097, 0.798083185961207;
    0.325622787733784, 0, 0, 3.96941677511242, 0.262443365586382, 0.798159220624288;
    0.362473186124438, 0, 0, 4.08378028664145, 0.245215813279462, 0.805350405442014;
    0.392989728833397, 3.44549603064862e-173, 4.06072410931956e-173, 4.33886060435300, 0.238272797195438, 0.820725843656590;
    0.426678640417755, 6.67710863257320e-26, 6.88645441242757e-26, 4.81568112861199, 0.237386548875649, 0.848162244447039;
    0.456616826960858, 660.183416307168, 563.429482872036, 5.43287724337547, 0.243939475485521, 0.884123764222363;
    0.486558146094805, 4.72930291281296e-11, 3.22990940320016e-11, 5.94443161755040, 0.263177051256398, 0.935940927126300;
    0.512757088547468, 2.02098188858616e-06, 1.34970849660727e-06, 5.61905517718146, 0.269781466216605, 0.987749986199865;
    0.546441115429094, 0.0802346128142368, 0.0596132760648914, 4.64875680521000, 0.276988792669036, 1.04524896819503;
    0.580128712405511, 1.40101515148249e-86, 1.11499696343956e-86, 3.96682761440185, 0.291923610190800, 1.08506710685180;
    0.613788583316141, 6.51243612140000e-314, 5.21172827700000e-314, 3.60439610464850, 0.312570098942462, 1.10912825657045;
    0.647508984505545, 0, 0, 3.40627567307638, 0.327096294140229, 1.12352352513494;
    0.684958880115697, 0, 0, 3.42931216461851, 0.324172166258383, 1.12179301757088;
    0.722368115906529, 0, 0, 3.45247918591559, 0.321251213138694, 1.12006704991772];

[w, cmp] = opt.compute_contour_weight(qot_contour, axis_pdf, config);
assert(abs(w - w0) < 1e-8);
assert(norm(cmp(1:10:end, :) - cmp0) < 1e-8);
end

% ================================================================================
function axis_pdf = generate_axis_pdf(zenith_dist)
% INPUT
%   zenith_dist:        [type, mean, sigma], type: 0 - uniform, 1 - gaussian

if zenith_dist(1) == 1
    zenith_dist = zenith_dist(2:3);
    tmp_x = linspace(-90, 90, 50000);
    tmp_pdf = exp(- (90 - tmp_x - zenith_dist(1)).^2/2 / zenith_dist(2)^2) / zenith_dist(2);
    zen_total = (sum(tmp_pdf) * (tmp_x(2) - tmp_x(1)));
    axis_pdf = @(llr) (exp(- (90 - asind(sind(llr(:, 2))) - zenith_dist(1)).^2/2 / zenith_dist(2)^2) / ...
        zenith_dist(2) / zen_total) * (1/360) * (1/360);
elseif zenith_dist(1) == 0
    axis_pdf = @(llr) ones(size(llr, 1), 1) / (180 * 180 * 4 / pi);
else
    error('Distribution type error!');
end
end
